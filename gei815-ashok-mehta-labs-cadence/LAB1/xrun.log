xrun(64): 23.09-s006: (c) Copyright 1995-2024 Cadence Design Systems, Inc.
TOOL:	xrun(64)	23.09-s006: Started on Sep 14, 2024 at 16:59:11 EDT
xrun
	-define no_implication
	-rnm_package
	-nowarn COVFHT
	-nowarn COVCGN
	-nowarn COVUTA
	-nowarn ICFCLD
	-nowarn WSEM2009
	-input /home/lacp3102/APP1/UdeS_S8_APP1/gei815-ashok-mehta-labs-cadence/verif/scripts/misc_commands.tcl
	-gui
	-input /home/lacp3102/APP1/UdeS_S8_APP1/gei815-ashok-mehta-labs-cadence/verif/scripts/waves.tcl
	-ACCESS +rwc
	-seed random
	-sv
	dut.v
	test_dut.sv
	dut_property.sv
xmsim: *W,NOMTDGUI: Multi-Threaded Dumping is disabled for interactive debug mode.
SVSEED set randomly from command line: 1386580774

-------------------------------------
Relinquished control to SimVision...
xcelium> 
xcelium> source /mnt/opt/cmc/tools/cadence/XCELIUMMAIN23.09.006_lnx86/tools/xcelium/files/xmsimrc
xcelium> ########################################################################
xcelium> ## Author  :    Marc-Andre Tetrault
xcelium> ## Project :    Verification Primer
xcelium> ##
xcelium> ## Universite de Sherbrooke
xcelium> ########################################################################
xcelium> #
xcelium> # Purpose   :   Misc Commands sent to simulator
xcelium> ########################################################################
xcelium> 
xcelium> 
xcelium> # get the seed. Reference: "SystemVerilog Reference" from Cadence Help tool (cdnshelp)
xcelium> set RetrievedSeed [set svseed]
1386580774
xcelium> puts "The SystemVerilog seed is $RetrievedSeed"
The SystemVerilog seed is 1386580774
xcelium> 
xcelium> # set severity_pack_assert_off {warning}
xcelium> # set pack_assert_off {  numeric_std }
xcelium> 
xcelium> # set assert_stop_level never
xcelium> ########################################################################
xcelium> ## Author  :    Marc-Andre Tetrault
xcelium> ## Project :    Verification Primer
xcelium> ##
xcelium> ## Universite de Sherbrooke
xcelium> ########################################################################
xcelium> 
xcelium> # save all waveforms by default. Consult the Simvision user guide
xcelium> # for details on the commands and how to change recording rules
xcelium> # if disk space is an issue.
xcelium> 
xcelium> database -open waves -into waves.shm -default
Created default SHM database waves
xcelium> 
xcelium> probe -create $::env(LAB_TEST_DUT_NAME) -all -depth all -database waves
Created probe 1
xcelium> run
        10  clk=1 req=0 gnt=0
  @(posedge pclk) preq ##2 pgnt;
                     |
xmsim: *E,ASRTST (./dut_property.sv,8): (time 10 NS) Assertion test_dut.dut1.dut_bind_inst.preqGnt has failed (1 cycles, starting 10 NS)
10 NS + 2 (Assertion output stop: test_dut.dut1.dut_bind_inst.preqGnt = failed)
xcelium> run
        10  		 test_dut.dut1.dut_bind_inst.preqGnt FAIL
        30  clk=1 req=1 gnt=0
        50  clk=1 req=0 gnt=1
  @(posedge pclk) preq ##2 pgnt;
                     |
xmsim: *E,ASRTST (./dut_property.sv,8): (time 50 NS) Assertion test_dut.dut1.dut_bind_inst.preqGnt has failed (1 cycles, starting 50 NS)
50 NS + 2 (Assertion output stop: test_dut.dut1.dut_bind_inst.preqGnt = failed)
xcelium> run
        50  		 test_dut.dut1.dut_bind_inst.preqGnt FAIL
        70  clk=1 req=0 gnt=1
  @(posedge pclk) preq ##2 pgnt;
                     |
xmsim: *E,ASRTST (./dut_property.sv,8): (time 70 NS) Assertion test_dut.dut1.dut_bind_inst.preqGnt has failed (1 cycles, starting 70 NS)
70 NS + 2 (Assertion output stop: test_dut.dut1.dut_bind_inst.preqGnt = failed)
xcelium> run
        70  		 test_dut.dut1.dut_bind_inst.preqGnt FAIL
        90  clk=1 req=1 gnt=0
       110  clk=1 req=0 gnt=0
  @(posedge pclk) preq ##2 pgnt;
                     |
xmsim: *E,ASRTST (./dut_property.sv,8): (time 110 NS) Assertion test_dut.dut1.dut_bind_inst.preqGnt has failed (1 cycles, starting 110 NS)
110 NS + 2 (Assertion output stop: test_dut.dut1.dut_bind_inst.preqGnt = failed)
xcelium> run
       110  		 test_dut.dut1.dut_bind_inst.preqGnt FAIL
       130  clk=1 req=0 gnt=0
  @(posedge pclk) preq ##2 pgnt;
                              |
xmsim: *E,ASRTST (./dut_property.sv,8): (time 130 NS) Assertion test_dut.dut1.dut_bind_inst.preqGnt has failed (3 cycles, starting 90 NS)
130 NS + 2 (Assertion output stop: test_dut.dut1.dut_bind_inst.preqGnt = failed)
xcelium> run
  @(posedge pclk) preq ##2 pgnt;
                     |
xmsim: *E,ASRTST (./dut_property.sv,8): (time 130 NS) Assertion test_dut.dut1.dut_bind_inst.preqGnt has failed (1 cycles, starting 130 NS)
130 NS + 2 (Assertion output stop: test_dut.dut1.dut_bind_inst.preqGnt = failed)
xcelium> run
       130  		 test_dut.dut1.dut_bind_inst.preqGnt FAIL
       150  clk=1 req=0 gnt=0
Memory Usage - Current physical: 86.5M, Current virtual: 377.3M
CPU Usage - 0.7s system + 0.4s user = 1.1s total (2.3% cpu)
Simulation complete via $finish(2) at time 150 NS + 0
./test_dut.sv:66 @(posedge sys_clk); $finish(2);
xcelium> run
xmsim: *E,RNFNSH: Cannot continue simulation due to a previous $finish.
xcelium> run
xmsim: *E,RNFNSH: Cannot continue simulation due to a previous $finish.
xcelium> probe -create -shm test_dut.dut1.dut_bind_inst.preqGnt -waveform -assertions -assertdebug
Created probe 2
xcelium> probe -create -shm test_dut.dut1.dut_bind_inst.preqGnt -waveform -assertions -transaction
Created probe 3
xcelium> ^C
xcelium> exit
TOOL:	xrun(64)	23.09-s006: Exiting on Sep 14, 2024 at 21:18:38 EDT  (total: 04:19:27)
